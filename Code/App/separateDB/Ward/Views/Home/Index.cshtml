@using Resources
@{
    ViewBag.Title = "Ward - Patient's Data";
}
<h3>@ViewBag.Message</h3>
<main id="ward-patient-data-content" class="container">

    <div class="panel panel-info">
        <div class="panel-body">
            <div data-bind="foreach: publishedMessages">
                <div class="col-sm-4" data-bind="localizedDateTime: When"></div>
                <div class="col-sm-8" data-bind="text: Comment"></div>
            </div>
        </div>
    </div>

    <div data-bind="foreach: wardData">
        <section class="panel panel-info">
            <div class="panel-heading">Patient's info</div>
            <div class="panel-body">
                <div class="row">
                    <label class="col-sm-2">Name:</label>
                    <span data-bind="text: PatientInfo.Name"></span>
                </div>
                <div class="row">
                    <label class="col-sm-2">Age:</label>
                    <span data-bind="text: PatientInfo.Age"></span>
                </div>
            </div>
        </section>

        <div data-bind="foreach: DieseaseLogs">
            <div class="row">
                <span data-bind="text: CurrentDiesease.DieseaseDescription"></span>
                <div class="row">
                    <div class="form-group col-sm-4">
                        <textarea id="examinationDescriptionInput" class="form-control" rows="4" cols="70"
                                  data-bind="value: examinationDescriptionBlood"></textarea>
                        <button data-bind="click: $root.sendToExaminationBlood">Blood</button>
                    </div>

                    <div class="form-group col-sm-4">
                        <textarea id="examinationDescriptionInput1" class="form-control" rows="4" cols="70"
                                  data-bind="value: examinationDescriptionUSG"></textarea>
                        <button data-bind="click: $root.sendToExaminationUSG">USG</button>

                    </div>

                    <div class="form-group col-sm-4">
                        <textarea id="examinationDescriptionInput2" class="form-control" rows="4" cols="70"
                                  data-bind="value: examinationDescriptionRTG"></textarea>
                        <button data-bind="click: $root.sendToExaminationRTG">RTG</button>

                    </div>
                </div>
            </div>

            <!-- ko foreach: PatientLogs -->
            <div class="row log-row" data-bind="css: ExaminationCssClassName()">
                <span class="col-sm-2" data-bind="localizedDateTime: When"></span>
                <span class="col-sm-2" data-bind="text: ExaminationName"></span>
                <span class="col-sm-2" data-bind="text: LogName"></span>
                <span class="col-sm-6" data-bind="text: Comment"></span>
            </div>
            <!-- /ko -->
        </div>
    </div>

    <div class="panel panel-info">
        <div class="panel-heading">Historical director's messages</div>
        <div class="panel-body">
            <div data-bind="foreach: publishedMessagesHistory">
                <div class="col-sm-4" data-bind="localizedDateTime: When()"></div>
                <div class="col-sm-8" data-bind="text: Comment()"></div>
            </div>
        </div>
    </div>

</main>

@section scripts {
    @Scripts.Render("~/bundles/ward_index")
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script type="text/javascript">

        (function () {
            var urls = {
                content: '@Url.Content("~/content")',
                sendToExamination: "@Url.RouteUrl("Default", new { httproute = "", controller = "WardExamination", action = "SendToExamination" })",
                getDirectorMessages: "@Url.RouteUrl("Default", new { httproute = "", controller = "WardExamination", action = "GetDirectorMessages" })"
            };

            var wardExaminationService = new WardExaminationService(urls);

            var WardViewModel = function () {
                var self = this;

                self.publishedMessages = ko.observableArray([]);
                self.wardData = ko.observableArray([]);

                self.publishedMessagesHistory = ko.observableArray([]);

                self.sendToExamination = function (patientDieseaseId, description, examinationType) {
                    if (description !== '') {
                        var time = new Date();
                        var log = new PatientLogViewModel(
                                            {
                                                PatientDieseaseId: patientDieseaseId,
                                                Comment: description,
                                                ExaminationType: examinationType,
                                                LogType: LogType.Request,
                                                When: time.getFullYear() + "-" + time.getMonth() + "-" + time.getDate()
                                                + " " + time.getHours() + ":" + time.getMinutes()
                                            });
                        wardExaminationService.sendToExamination(
                            {
                                PatientDieseaseId: log.PatientDieseaseId(),
                                Comment: log.Comment(),
                                Type: log.ExaminationType()
                            },
                            function () {
                                self.wardData().forEach(function (patientItem) {
                                    patientItem.DieseaseLogs().forEach(function (dieseseLog) {
                                        if (dieseseLog.CurrentDiesease.PatientDieseaseId == patientDieseaseId) {
                                            dieseseLog.PatientLogs.push(log);
                                        }
                                    });
                                });
                            });
                    }
                };

                self.sendToExaminationBlood = function (item) {
                    self.sendToExamination(
                        item.CurrentDiesease.PatientDieseaseId,
                        item.examinationDescriptionBlood(),
                        ExaminationType.BLOOD
                        );

                };

                self.sendToExaminationUSG = function (item) {
                    self.sendToExamination(
                        item.CurrentDiesease.PatientDieseaseId,
                        item.examinationDescriptionUSG(),
                        ExaminationType.USG
                        );

                };

                self.sendToExaminationRTG = function (item) {
                    self.sendToExamination(
                        item.CurrentDiesease.PatientDieseaseId,
                        item.examinationDescriptionRTG(),
                        ExaminationType.RTG
                        );

                };

                self.getDirectorMessages = function () {
                    wardExaminationService.getDirectorMessages(function (data) {
                        self.publishedMessagesHistory(data);
                    });
                }
            };


            $(function () {

                var wardViewModel = new WardViewModel();
                // Reference the auto-generated proxy for the hub.
                var chat = $.connection.wardHub;
                // Create a function that the hub can call back to display messages.
                chat.client.addNewDeclarationToWard = function (declaration) {
                    wardViewModel.wardData.push(new WardPatientDeclarationViewModel(declaration));
                };
                chat.client.addNewPatientLog = function (data) {
                    var log = new PatientLogViewModel(data);
                    wardViewModel.wardData().forEach(function (patientItem) {
                            patientItem.DieseaseLogs().forEach(function (dieseseLog) {
                                if (dieseseLog.CurrentDiesease.PatientDieseaseId() == log.PatientDieseaseId()) {
                                    dieseseLog.PatientLogs.push(log);
                                }
                            });
                        
                    });
                };
                chat.client.addPublishedDirectorMessage = function (message) {
                    wardViewModel.publishedMessages.push(new DirectorMessagesModel(message));
                }
                $.connection.hub.start().done(function () {
                    wardViewModel.getDirectorMessages();
                    ko.applyBindings(wardViewModel, document.getElementById("ward-patient-data-content"));
                    $.data(document.body, "WardViewModel", wardViewModel);
                });

            });
        })();
    </script>
}
